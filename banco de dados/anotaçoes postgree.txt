arquivo postgresql.conf
C:\Program Files\PostgreSQL\14\data
dentro do diretorio PGDATA
LISTEN_ADDRESSES : IP que tera acesso ao BD
PORT: padrão 5432 , mas pode ser alterado
MAX_CONNECTIONS: atentar que as conexoes consomem recurso , deixar o mínimo possível

PG_HBA.CONF
Arquivo responsável pelo controle de autenticação dos usuários no servidor PostgreSQL

PG-IDENT.CONF
Reponsável por mapear os usuários do BD
Ex: MAPNAME      SYSTEM-USERNAME      PG-USERNAME
diretoria      Daniel      pg-diretoria
comercial      Tiburcio     pg-comercial

*Comandos administrativos postgres podem ser feitos na aba services

cluster : coleção de banco de dados que compartilham as mesmas configurações

Databases ficam dentro dos cluster e possuem schemas onde ficam as tabelas

PGAdmin
**senha usuario master root
**senha bd postgres
quando deparar com problema de conexao
verificar acesso ao cluster em postgresql.conf
liberar acesso ao cluster para o usuario do bd em pg_hba.conf
criar e editar usuarios 


no cmd do windows acessar a pasta cd C:\Program Files\PostgreSQL\14\bin
executar o cmd psql -h 127.0.0.1 -p 5432 -U postgres = senha postgres
alterar senha usuario master banco de dados
ALTER USER postgres PASSWORD 'postgres';

\du = mostra as roles criadas no BD


create server group
register server
preenche nome 
aba connections 
host name : 127.0.0.1
porta 5432 padrão
maintenance database postgres
username postgres
password postgresmarca salvar senha

administrar usuarios postgreSQL

criando a ROLE
CREATE ROLE professores NOCREATEDB NOCREATEROLE INHERIT NOLOGIN NOBYPASSRLS CONNECTION LIMIT 10; 

CREATE ROLE daniel INHERIT LOGIN PASSWORD '123' IN ROLE professores;

INHERIT indica se a ROLE vai herdar as permissoes de outra role

associação entre roles
no momento da criação
IN ROLE (passa a pertencer a role informada)
ROLE (a role informada passa pertencer a nova role)

após a criação
GRANT [role a ser concedida] TO [ role a assumir as permissões]
grant são privilégios de acesso

desassociar membros entre roles
REVOKE[role que será revogada] FROM [role que terá suas permissões revogadas]
REVOKE professores FROM daniel;

alterar uma role : ALTER ROLE
ALTER ROLE professores PASSWORD '123';

excluir uma role: DROP ROLE
DROP ROLE daniel;

CREATE DATABASE name;

ALTER DATABASE name RENAME TO new_name

boa prática é utilizar IF NOT EXISTS | IF EXISTS

SELECT (campos,) FROM tabela [condições]












